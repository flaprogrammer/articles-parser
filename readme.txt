Рассмотрим пару статей на сайтах ленты и газеты

Можно заметить, что текст статьи является самым большим текстовым блоком, вот его мы и будем искать.

Первая мысль - в блоке с текстом статьи не должно быть вложенных дивов, там могут быть только спаны, параграфы, картинки и ссылки. Просто найдем все элементы <div>, внутри которых нет вложенных дивов, и среди них тот, который содержит больше всего текста, и окажется тем, что нам нужно. Проверяем на ленте - сработало! Но на газете уже нет, там с текстом статьи идет блок со ссылкой на похожую новость.

Ну и вправду, что за глупость, что в тексте статьи нет вложенных дивов. Пройдемся по всем дивам и удалим внутри них вложенные. К сожалению в этот момент я терял возможность обходить дерево, и пока до меня не дошло, как эту возможность вернуть. Но это довольно грубая ошибка. 

Просмотрев множество статей на сайтах я понял, что в них везде присутствует тег <p>. Так что в первую очередь рассматриваем самый длинный блог текста, содержащий параграфы, и лишь если их нигде нет, то смотрим всё. 

Так, теперь название статьи. Естественно, оно должно быть в теге h1. Но если его нет, в качестве названия статьи будет title, он то уж точно везде есть.

Картинка... Просто поищу ее в том блоке, с которого мы берем текст. Хотя нужно было поискать на пару уровней выше и ниже.

Сохранять все будем в таблице MySQL. Выбрал я это способ потому, что это удобнее, чем хранить их в текстовых файлах, как сначала я делал. К тому же других способов я не знаю. Создадим таблицу со столбцами id, url, title, text, picts. Url сделаем уникальным. От картинок будем хранить только url, потому что сохранять их надобности пока нет. 

Результаты (да там всего страниц 10) можете посмотреть, выполнив запрос, который находится в файле bd.sql

Недостатки работы:
	Картинки ищутся только в блоке с текстом, и там их практически не бывает
	Если на странице есть текст с параграфами длиннее статьи, то парсер путает статью с ним
	Картинки сохраняются только в виде url

Достоинства:
	Работает почти всегда!
